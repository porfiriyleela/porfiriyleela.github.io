;(function() {
!function (t) { if ("object" == typeof exports && "undefined" != typeof module) module.exports = t(); else if ("function" == typeof define && define.amd) define([], t); else { var e; e = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this, e.superagent = t() } }(function () { return function t(e, r, i) { function s(o, a) { if (!r[o]) { if (!e[o]) { var u = "function" == typeof require && require; if (!a && u) return u(o, !0); if (n) return n(o, !0); var h = new Error("Cannot find module '" + o + "'"); throw h.code = "MODULE_NOT_FOUND", h } var p = r[o] = { exports: {} }; e[o][0].call(p.exports, function (t) { var r = e[o][1][t]; return s(r ? r : t) }, p, p.exports, t, e, r, i) } return r[o].exports } for (var n = "function" == typeof require && require, o = 0; o < i.length; o++) s(i[o]); return s }({ 1: [function (t, e, r) { function i(t) { var e = s(t) ? Object.prototype.toString.call(t) : ""; return "[object Function]" === e } var s = t("./is-object"); e.exports = i }, { "./is-object": 2 }], 2: [function (t, e, r) { function i(t) { return null !== t && "object" == typeof t } e.exports = i }, {}], 3: [function (t, e, r) { function i(t) { if (t) return s(t) } function s(t) { for (var e in i.prototype) t[e] = i.prototype[e]; return t } var n = t("./is-object"); e.exports = i, i.prototype.clearTimeout = function () { return clearTimeout(this._timer), clearTimeout(this._responseTimeoutTimer), delete this._timer, delete this._responseTimeoutTimer, this }, i.prototype.parse = function (t) { return this._parser = t, this }, i.prototype.responseType = function (t) { return this._responseType = t, this }, i.prototype.serialize = function (t) { return this._serializer = t, this }, i.prototype.timeout = function (t) { if (!t || "object" != typeof t) return this._timeout = t, this._responseTimeout = 0, this; for (var e in t) switch (e) { case "deadline": this._timeout = t.deadline; break; case "response": this._responseTimeout = t.response; break; default: console.warn("Unknown timeout option", e) } return this }, i.prototype.retry = function (t) { return 0 !== arguments.length && t !== !0 || (t = 1), t <= 0 && (t = 0), this._maxRetries = t, this._retries = 0, this }, i.prototype._retry = function () { return this.clearTimeout(), this.req && (this.req = null, this.req = this.request()), this._aborted = !1, this.timedout = !1, this._end() }, i.prototype.then = function (t, e) { if (!this._fullfilledPromise) { var r = this; this._endCalled && console.warn("Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises"), this._fullfilledPromise = new Promise(function (t, e) { r.end(function (r, i) { r ? e(r) : t(i) }) }) } return this._fullfilledPromise.then(t, e) }, i.prototype.catch = function (t) { return this.then(void 0, t) }, i.prototype.use = function (t) { return t(this), this }, i.prototype.ok = function (t) { if ("function" != typeof t) throw Error("Callback required"); return this._okCallback = t, this }, i.prototype._isResponseOK = function (t) { return !!t && (this._okCallback ? this._okCallback(t) : t.status >= 200 && t.status < 300) }, i.prototype.get = function (t) { return this._header[t.toLowerCase()] }, i.prototype.getHeader = i.prototype.get, i.prototype.set = function (t, e) { if (n(t)) { for (var r in t) this.set(r, t[r]); return this } return this._header[t.toLowerCase()] = e, this.header[t] = e, this }, i.prototype.unset = function (t) { return delete this._header[t.toLowerCase()], delete this.header[t], this }, i.prototype.field = function (t, e) { if (null === t || void 0 === t) throw new Error(".field(name, val) name can not be empty"); if (this._data && console.error(".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()"), n(t)) { for (var r in t) this.field(r, t[r]); return this } if (Array.isArray(e)) { for (var i in e) this.field(t, e[i]); return this } if (null === e || void 0 === e) throw new Error(".field(name, val) val can not be empty"); return "boolean" == typeof e && (e = "" + e), this._getFormData().append(t, e), this }, i.prototype.abort = function () { return this._aborted ? this : (this._aborted = !0, this.xhr && this.xhr.abort(), this.req && this.req.abort(), this.clearTimeout(), this.emit("abort"), this) }, i.prototype.withCredentials = function (t) { return void 0 == t && (t = !0), this._withCredentials = t, this }, i.prototype.redirects = function (t) { return this._maxRedirects = t, this }, i.prototype.toJSON = function () { return { method: this.method, url: this.url, data: this._data, headers: this._header } }, i.prototype.send = function (t) { var e = n(t), r = this._header["content-type"]; if (this._formData && console.error(".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()"), e && !this._data) Array.isArray(t) ? this._data = [] : this._isHost(t) || (this._data = {}); else if (t && this._data && this._isHost(this._data)) throw Error("Can't merge these send calls"); if (e && n(this._data)) for (var i in t) this._data[i] = t[i]; else "string" == typeof t ? (r || this.type("form"), r = this._header["content-type"], "application/x-www-form-urlencoded" == r ? this._data = this._data ? this._data + "&" + t : t : this._data = (this._data || "") + t) : this._data = t; return !e || this._isHost(t) ? this : (r || this.type("json"), this) }, i.prototype.sortQuery = function (t) { return this._sort = "undefined" == typeof t || t, this }, i.prototype._timeoutError = function (t, e, r) { if (!this._aborted) { var i = new Error(t + e + "ms exceeded"); i.timeout = e, i.code = "ECONNABORTED", i.errno = r, this.timedout = !0, this.abort(), this.callback(i) } }, i.prototype._setTimeouts = function () { var t = this; this._timeout && !this._timer && (this._timer = setTimeout(function () { t._timeoutError("Timeout of ", t._timeout, "ETIME") }, this._timeout)), this._responseTimeout && !this._responseTimeoutTimer && (this._responseTimeoutTimer = setTimeout(function () { t._timeoutError("Response timeout of ", t._responseTimeout, "ETIMEDOUT") }, this._responseTimeout)) } }, { "./is-object": 2 }], 4: [function (t, e, r) { function i(t) { if (t) return s(t) } function s(t) { for (var e in i.prototype) t[e] = i.prototype[e]; return t } var n = t("./utils"); e.exports = i, i.prototype.get = function (t) { return this.header[t.toLowerCase()] }, i.prototype._setHeaderProperties = function (t) { var e = t["content-type"] || ""; this.type = n.type(e); var r = n.params(e); for (var i in r) this[i] = r[i]; this.links = {}; try { t.link && (this.links = n.parseLinks(t.link)) } catch (t) { } }, i.prototype._setStatusProperties = function (t) { var e = t / 100 | 0; this.status = this.statusCode = t, this.statusType = e, this.info = 1 == e, this.ok = 2 == e, this.redirect = 3 == e, this.clientError = 4 == e, this.serverError = 5 == e, this.error = (4 == e || 5 == e) && this.toError(), this.accepted = 202 == t, this.noContent = 204 == t, this.badRequest = 400 == t, this.unauthorized = 401 == t, this.notAcceptable = 406 == t, this.forbidden = 403 == t, this.notFound = 404 == t } }, { "./utils": 6 }], 5: [function (t, e, r) { var i = ["ECONNRESET", "ETIMEDOUT", "EADDRINFO", "ESOCKETTIMEDOUT"]; e.exports = function (t, e) { return !!(t && t.code && ~i.indexOf(t.code)) || (!!(e && e.status && e.status >= 500) || (!!(t && "timeout" in t && "ECONNABORTED" == t.code) || !!(t && "crossDomain" in t))) } }, {}], 6: [function (t, e, r) { r.type = function (t) { return t.split(/ *; */).shift() }, r.params = function (t) { return t.split(/ *; */).reduce(function (t, e) { var r = e.split(/ *= */), i = r.shift(), s = r.shift(); return i && s && (t[i] = s), t }, {}) }, r.parseLinks = function (t) { return t.split(/ *, */).reduce(function (t, e) { var r = e.split(/ *; */), i = r[0].slice(1, -1), s = r[1].split(/ *= */)[1].slice(1, -1); return t[s] = i, t }, {}) }, r.cleanHeader = function (t, e) { return delete t["content-type"], delete t["content-length"], delete t["transfer-encoding"], delete t.host, e && delete t.cookie, t } }, {}], 7: [function (t, e, r) { function i(t) { if (t) return s(t) } function s(t) { for (var e in i.prototype) t[e] = i.prototype[e]; return t } "undefined" != typeof e && (e.exports = i), i.prototype.on = i.prototype.addEventListener = function (t, e) { return this._callbacks = this._callbacks || {}, (this._callbacks["$" + t] = this._callbacks["$" + t] || []).push(e), this }, i.prototype.once = function (t, e) { function r() { this.off(t, r), e.apply(this, arguments) } return r.fn = e, this.on(t, r), this }, i.prototype.off = i.prototype.removeListener = i.prototype.removeAllListeners = i.prototype.removeEventListener = function (t, e) { if (this._callbacks = this._callbacks || {}, 0 == arguments.length) return this._callbacks = {}, this; var r = this._callbacks["$" + t]; if (!r) return this; if (1 == arguments.length) return delete this._callbacks["$" + t], this; for (var i, s = 0; s < r.length; s++) if (i = r[s], i === e || i.fn === e) { r.splice(s, 1); break } return this }, i.prototype.emit = function (t) { this._callbacks = this._callbacks || {}; var e = [].slice.call(arguments, 1), r = this._callbacks["$" + t]; if (r) { r = r.slice(0); for (var i = 0, s = r.length; i < s; ++i) r[i].apply(this, e) } return this }, i.prototype.listeners = function (t) { return this._callbacks = this._callbacks || {}, this._callbacks["$" + t] || [] }, i.prototype.hasListeners = function (t) { return !!this.listeners(t).length } }, {}], 8: [function (t, e, r) { function i() { } function s(t) { if (!y(t)) return t; var e = []; for (var r in t) n(e, r, t[r]); return e.join("&") } function n(t, e, r) { if (null != r) if (Array.isArray(r)) r.forEach(function (r) { n(t, e, r) }); else if (y(r)) for (var i in r) n(t, e + "[" + i + "]", r[i]); else t.push(encodeURIComponent(e) + "=" + encodeURIComponent(r)); else null === r && t.push(encodeURIComponent(e)) } function o(t) { for (var e, r, i = {}, s = t.split("&"), n = 0, o = s.length; n < o; ++n) e = s[n], r = e.indexOf("="), r == -1 ? i[decodeURIComponent(e)] = "" : i[decodeURIComponent(e.slice(0, r))] = decodeURIComponent(e.slice(r + 1)); return i } function a(t) { var e, r, i, s, n = t.split(/\r?\n/), o = {}; n.pop(); for (var a = 0, u = n.length; a < u; ++a) r = n[a], e = r.indexOf(":"), i = r.slice(0, e).toLowerCase(), s = v(r.slice(e + 1)), o[i] = s; return o } function u(t) { return /[\/+]json\b/.test(t) } function h(t) { this.req = t, this.xhr = this.req.xhr, this.text = "HEAD" != this.req.method && ("" === this.xhr.responseType || "text" === this.xhr.responseType) || "undefined" == typeof this.xhr.responseType ? this.xhr.responseText : null, this.statusText = this.req.xhr.statusText; var e = this.xhr.status; 1223 === e && (e = 204), this._setStatusProperties(e), this.header = this.headers = a(this.xhr.getAllResponseHeaders()), this.header["content-type"] = this.xhr.getResponseHeader("content-type"), this._setHeaderProperties(this.header), null === this.text && t._responseType ? this.body = this.xhr.response : this.body = "HEAD" != this.req.method ? this._parseBody(this.text ? this.text : this.xhr.response) : null } function p(t, e) { var r = this; this._query = this._query || [], this.method = t, this.url = e, this.header = {}, this._header = {}, this.on("end", function () { var t = null, e = null; try { e = new h(r) } catch (e) { return t = new Error("Parser is unable to parse the response"), t.parse = !0, t.original = e, r.xhr ? (t.rawResponse = "undefined" == typeof r.xhr.responseType ? r.xhr.responseText : r.xhr.response, t.status = r.xhr.status ? r.xhr.status : null, t.statusCode = t.status) : (t.rawResponse = null, t.status = null), r.callback(t) } r.emit("response", e); var i; try { r._isResponseOK(e) || (i = new Error(e.statusText || "Unsuccessful HTTP response"), i.original = t, i.response = e, i.status = e.status) } catch (t) { i = t } i ? r.callback(i, e) : r.callback(null, e) }) } function c(t, e, r) { var i = w("DELETE", t); return "function" == typeof e && (r = e, e = null), e && i.send(e), r && i.end(r), i } var l; "undefined" != typeof window ? l = window : "undefined" != typeof self ? l = self : (console.warn("Using browser-only version of superagent in non-browser environment"), l = this); var f = t("component-emitter"), d = t("./request-base"), y = t("./is-object"), m = t("./is-function"), _ = t("./response-base"), b = t("./should-retry"), w = r = e.exports = function (t, e) { return "function" == typeof e ? new r.Request("GET", t).end(e) : 1 == arguments.length ? new r.Request("GET", t) : new r.Request(t, e) }; r.Request = p, w.getXHR = function () { if (!(!l.XMLHttpRequest || l.location && "file:" == l.location.protocol && l.ActiveXObject)) return new XMLHttpRequest; try { return new ActiveXObject("Microsoft.XMLHTTP") } catch (t) { } try { return new ActiveXObject("Msxml2.XMLHTTP.6.0") } catch (t) { } try { return new ActiveXObject("Msxml2.XMLHTTP.3.0") } catch (t) { } try { return new ActiveXObject("Msxml2.XMLHTTP") } catch (t) { } throw Error("Browser-only verison of superagent could not find XHR") }; var v = "".trim ? function (t) { return t.trim() } : function (t) { return t.replace(/(^\s*|\s*$)/g, "") }; w.serializeObject = s, w.parseString = o, w.types = { html: "text/html", json: "application/json", xml: "application/xml", urlencoded: "application/x-www-form-urlencoded", form: "application/x-www-form-urlencoded", "form-data": "application/x-www-form-urlencoded" }, w.serialize = { "application/x-www-form-urlencoded": s, "application/json": JSON.stringify }, w.parse = { "application/x-www-form-urlencoded": o, "application/json": JSON.parse }, _(h.prototype), h.prototype._parseBody = function (t) { var e = w.parse[this.type]; return this.req._parser ? this.req._parser(this, t) : (!e && u(this.type) && (e = w.parse["application/json"]), e && t && (t.length || t instanceof Object) ? e(t) : null) }, h.prototype.toError = function () { var t = this.req, e = t.method, r = t.url, i = "cannot " + e + " " + r + " (" + this.status + ")", s = new Error(i); return s.status = this.status, s.method = e, s.url = r, s }, w.Response = h, f(p.prototype), d(p.prototype), p.prototype.type = function (t) { return this.set("Content-Type", w.types[t] || t), this }, p.prototype.accept = function (t) { return this.set("Accept", w.types[t] || t), this }, p.prototype.auth = function (t, e, r) { switch ("object" == typeof e && null !== e && (r = e), r || (r = { type: "function" == typeof btoa ? "basic" : "auto" }), r.type) { case "basic": this.set("Authorization", "Basic " + btoa(t + ":" + e)); break; case "auto": this.username = t, this.password = e; break; case "bearer": this.set("Authorization", "Bearer " + t) } return this }, p.prototype.query = function (t) { return "string" != typeof t && (t = s(t)), t && this._query.push(t), this }, p.prototype.attach = function (t, e, r) { if (e) { if (this._data) throw Error("superagent can't mix .send() and .attach()"); this._getFormData().append(t, e, r || e.name) } return this }, p.prototype._getFormData = function () { return this._formData || (this._formData = new l.FormData), this._formData }, p.prototype.callback = function (t, e) { if (this._maxRetries && this._retries++ < this._maxRetries && b(t, e)) return this._retry(); var r = this._callback; this.clearTimeout(), t && (this._maxRetries && (t.retries = this._retries - 1), this.emit("error", t)), r(t, e) }, p.prototype.crossDomainError = function () { var t = new Error("Request has been terminated\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc."); t.crossDomain = !0, t.status = this.status, t.method = this.method, t.url = this.url, this.callback(t) }, p.prototype.buffer = p.prototype.ca = p.prototype.agent = function () { return console.warn("This is not supported in browser version of superagent"), this }, p.prototype.pipe = p.prototype.write = function () { throw Error("Streaming is not supported in browser version of superagent") }, p.prototype._appendQueryString = function () { var t = this._query.join("&"); if (t && (this.url += (this.url.indexOf("?") >= 0 ? "&" : "?") + t), this._sort) { var e = this.url.indexOf("?"); if (e >= 0) { var r = this.url.substring(e + 1).split("&"); m(this._sort) ? r.sort(this._sort) : r.sort(), this.url = this.url.substring(0, e) + "?" + r.join("&") } } }, p.prototype._isHost = function (t) { return t && "object" == typeof t && !Array.isArray(t) && "[object Object]" !== Object.prototype.toString.call(t) }, p.prototype.end = function (t) { return this._endCalled && console.warn("Warning: .end() was called twice. This is not supported in superagent"), this._endCalled = !0, this._callback = t || i, this._appendQueryString(), this._end() }, p.prototype._end = function () { var t = this, e = this.xhr = w.getXHR(), r = this._formData || this._data; this._setTimeouts(), e.onreadystatechange = function () { var r = e.readyState; if (r >= 2 && t._responseTimeoutTimer && clearTimeout(t._responseTimeoutTimer), 4 == r) { var i; try { i = e.status } catch (t) { i = 0 } if (!i) { if (t.timedout || t._aborted) return; return t.crossDomainError() } t.emit("end") } }; var i = function (e, r) { r.total > 0 && (r.percent = r.loaded / r.total * 100), r.direction = e, t.emit("progress", r) }; if (this.hasListeners("progress")) try { e.onprogress = i.bind(null, "download"), e.upload && (e.upload.onprogress = i.bind(null, "upload")) } catch (t) { } try { this.username && this.password ? e.open(this.method, this.url, !0, this.username, this.password) : e.open(this.method, this.url, !0) } catch (t) { return this.callback(t) } if (this._withCredentials && (e.withCredentials = !0), !this._formData && "GET" != this.method && "HEAD" != this.method && "string" != typeof r && !this._isHost(r)) { var s = this._header["content-type"], n = this._serializer || w.serialize[s ? s.split(";")[0] : ""]; !n && u(s) && (n = w.serialize["application/json"]), n && (r = n(r)) } for (var o in this.header) null != this.header[o] && this.header.hasOwnProperty(o) && e.setRequestHeader(o, this.header[o]); return this._responseType && (e.responseType = this._responseType), this.emit("request", this), e.send("undefined" != typeof r ? r : null), this }, w.get = function (t, e, r) { var i = w("GET", t); return "function" == typeof e && (r = e, e = null), e && i.query(e), r && i.end(r), i }, w.head = function (t, e, r) { var i = w("HEAD", t); return "function" == typeof e && (r = e, e = null), e && i.send(e), r && i.end(r), i }, w.options = function (t, e, r) { var i = w("OPTIONS", t); return "function" == typeof e && (r = e, e = null), e && i.send(e), r && i.end(r), i }, w.del = c, w.delete = c, w.patch = function (t, e, r) { var i = w("PATCH", t); return "function" == typeof e && (r = e, e = null), e && i.send(e), r && i.end(r), i }, w.post = function (t, e, r) { var i = w("POST", t); return "function" == typeof e && (r = e, e = null), e && i.send(e), r && i.end(r), i }, w.put = function (t, e, r) { var i = w("PUT", t); return "function" == typeof e && (r = e, e = null), e && i.send(e), r && i.end(r), i } }, { "./is-function": 1, "./is-object": 2, "./request-base": 3, "./response-base": 4, "./should-retry": 5, "component-emitter": 7 }] }, {}, [8])(8) });
!function (e) { var n = !1; if ("function" == typeof define && define.amd && (define(e), n = !0), "object" == typeof exports && (module.exports = e(), n = !0), !n) { var o = window.Cookies, t = window.Cookies = e(); t.noConflict = function () { return window.Cookies = o, t } } }(function () { function e() { for (var e = 0, n = {}; e < arguments.length; e++) { var o = arguments[e]; for (var t in o) n[t] = o[t] } return n } function n(o) { function t(n, r, i) { var c; if ("undefined" != typeof document) { if (arguments.length > 1) { if (i = e({ path: "/" }, t.defaults, i), "number" == typeof i.expires) { var a = new Date; a.setMilliseconds(a.getMilliseconds() + 864e5 * i.expires), i.expires = a } i.expires = i.expires ? i.expires.toUTCString() : ""; try { c = JSON.stringify(r), /^[\{\[]/.test(c) && (r = c) } catch (e) { } r = o.write ? o.write(r, n) : encodeURIComponent(String(r)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent), n = encodeURIComponent(String(n)), n = n.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent), n = n.replace(/[\(\)]/g, escape); var f = ""; for (var s in i) i[s] && (f += "; " + s, i[s] !== !0 && (f += "=" + i[s])); return document.cookie = n + "=" + r + f } n || (c = {}); for (var p = document.cookie ? document.cookie.split("; ") : [], d = 0; d < p.length; d++) { var u = p[d].split("="), l = u.slice(1).join("="); '"' === l.charAt(0) && (l = l.slice(1, -1)); try { var g = u[0].replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent); if (l = o.read ? o.read(l, g) : o(l, g) || l.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent), this.json) try { l = JSON.parse(l) } catch (e) { } if (n === g) { c = l; break } n || (c[g] = l) } catch (e) { } } return c } } return t.set = t, t.get = function (e) { return t.call(t, e) }, t.getJSON = function () { return t.apply({ json: !0 }, [].slice.call(arguments)) }, t.defaults = {}, t.remove = function (n, o) { t(n, "", e(o, { expires: -1 })) }, t.withConverter = n, t } return n(function () { }) });
(function (global, factory) {
    "use strict";
    if (typeof module === "object" && typeof module.exports === "object") {
        module.exports = global.document ?
			factory(global, true) :
			function (w) {
			    if (!w.document) {
			        throw new Error("lytPostman requires a window with a document");
			    }
			    return factory(w);
			};
    } else {
        factory(global);
    }
    // Pass this if window is not defined yet
})(typeof window !== "undefined" ? window : this, function (window, noGlobal) {
    "use strict";
    var _init = {
        version: '1.0.0',
        debug: false,
        client: 'https://promo.united.com',
        widget: 'https://promo.united.com',
        api: 'https://promo.united.com',
        authToken: '$AUTH_TOKEN$',
        callbacks: {"corporate-tracker":["update-promo-code"],"future-flights":[],"step-tracker":[],"multistep-tracker":[],"ppr-multistep-tracker":[],"route-status-tracker":[],"status-match-tracker":[],"ppr-corporate-tracker":[]},
        mediaQueries: {"corporate-tracker":[{"Key":"min-width:498px","Value":{"max-width":"730px !important","width":"100% !important","height":"700px !important"}},{"Key":"max-width:497px","Value":{"max-width":"100% !important","width":"100vh !important","height":"1045px !important"}}],"future-flights":[{"Key":"min-width:0px","Value":{"width":"100% !important"}}],"step-tracker":[{"Key":"min-width:0px","Value":{"width":"100% !important","height":"560px !important","overflow":"hidden !important"}}],"multistep-tracker":[{"Key":"min-width:0px","Value":{"width":"100% !important","height":"560px !important","overflow":"hidden !important"}}],"ppr-multistep-tracker":[{"Key":"min-width:0px","Value":{"width":"100% !important","height":"620px !important","overflow":"hidden !important"}}],"route-status-tracker":[{"Key":"min-width:481px","Value":{"width":"711px !important","height":"777px !important","overflow":"hidden !important"}},{"Key":"max-width:480px","Value":{"width":"320px !important","height":"1310px !important","overflow":"hidden !important"}}],"status-match-tracker":[{"Key":"min-width:481px","Value":{"width":"711px !important","height":"586px !important","overflow":"hidden !important"}},{"Key":"max-width:480px","Value":{"width":"320px !important","height":"910px !important","overflow":"hidden !important"}}],"ppr-corporate-tracker":[{"Key":"min-width:0px","Value":{"width":"100% !important","height":"560px !important","overflow":"hidden !important"}}]},
        dpapi: 'https://aws.prdgw.api.united.com',
    };
    var arr = [];
    var document = window.document,
        // Define a local copy
        lytPostman = function () {

        };

    lytPostman.fn = lytPostman.prototype = function () {

    };

    lytPostman.extend = lytPostman.fn.extend = function () {
        function isPlainObject(obj) {
            if (typeof obj !== "object" || obj.nodeType || (obj != null && obj === obj.window)) {
                return false;
            }

            if (obj.constructor && !hasOwn.call(obj.constructor.prototype, "isPrototypeOf")) {
                return false;
            }
            return true;
        }
        var options, name, src, copy, copyIsArray, clone,
            target = arguments[0] || {},
            i = 1,
            length = arguments.length,
            deep = false;
        if (typeof target === "boolean") {
            deep = target;
            target = arguments[i] || {};
            i++;
        }
        if (typeof target !== "object" && typeof target !== "function") {
            target = {};
        }
        if (i === length) {
            target = this;
            i--;
        }
        for (; i < length; i++) {
            if ((options = arguments[i]) != null) {
                for (name in options) {
                    src = target[name];
                    copy = options[name];
                    if (target === copy) {
                        continue;
                    }
                    if (deep && copy && (isPlainObject(copy) ||
                        (copyIsArray = Array.isArray(copy)))) {

                        if (copyIsArray) {
                            copyIsArray = false;
                            clone = src && Array.isArray(src) ? src : [];

                        } else {
                            clone = src && isPlainObject(src) ? src : {};
                        }
                        target[name] = lytPostman.extend(deep, clone, copy);
                    } else if (copy !== undefined) {
                        target[name] = copy;
                    }
                }
            }
        }
        return target;
    };

    lytPostman.extend({
        cookies: Cookies.noConflict(), //public
        ajax: window.superagent //public
    })
    // Utilities
    lytPostman.extend({
        qs: function (name) {
            var vars = [], hash;
            var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
            for (var i = 0; i < hashes.length; i++) {
                hash = hashes[i].split('=');
                vars.push(hash[0]);
                vars[hash[0]] = hash[1];
            }
            return vars;
        },
        deepFreeze: function (obj) {
            // Retrieve the property names defined on obj
            var propNames = Object.getOwnPropertyNames(obj);
            // Freeze properties before freezing self
            propNames.forEach(function (name) {
                var prop = obj[name];
                // Freeze prop if it is an object
                if (typeof prop == 'object' && prop !== null)
                    deepFreeze(prop);
            });

            // Freeze self (no-op if already frozen)
            return Object.freeze(obj);
        }, //private
        getUrlParameter: function (name) {
            name = name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');
            var regex = new RegExp('[\\?&]' + name + '=([^&#]*)');
            var results = regex.exec(location.search);
            return results === null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
        }, //private
        uuid: function () {
            var d = new Date().getTime();
            var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
                var r = (d + Math.random() * 16) % 16 | 0;
                d = Math.floor(d / 16);
                return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);
            });
            //lytPostman.log('uuid: ', uuid);

            return uuid;
        }, //private
        isArray: function (obj) {
            return Object.prototype.toString.call(obj) === '[object Array]';
        } //private
    });

    lytPostman.extend({
        readyQueue: [],
        listeners: {},
        cbQueue: {},
        proxies: [], //private
        hosts: {
            client: _init.client,
            widget: _init.widget,
            api: _init.api,
            dpapi: _init.dpapi,
            //clientsecret: _init.clientsecret
        }, //private
        authStore: {
            appId: _init.appId,
            apiKey: _init.apiKey,
            authtoken: _init.authToken
        }, //private

        DPbaseUrls: function () {
            return {
                dpauth: lytPostman.hosts.dpapi + '/oauth2/v1/token',
            }
        }, //private
        convertAttribute: function (str) {
            return str.replace(/-([a-z])/g, function (g) { return g[1].toUpperCase(); });
        }, //private
        prefix: function (str) {
            return (str.indexOf(lytPostman.attributePrefix) == 0) ? str : lytPostman.attributePrefix + str
        }, //private
        attributePrefix: 'lyt-', //private
        authAttributes: [
            'app-id',
            'api-key',
            'data',
            'lang',
            'userid',
            'onload'
        ],  //private
        dataStore: {}, //private
        data: {}, //private
        receive: function (action, cb) {
            //// proxy and queue messages sent before ready
            //if (action == 'ready') {
            //    lytPostman.cbQueue;
            //}

            action = lytPostman.prefix(action);
            function lytPostmanCb(cb, action) {
                //lytPostman.log(cb, action)
                this.cb = cb;
                this.action = lytPostman.prefix(action);
            }

            lytPostmanCb.prototype.fn = function (e) {
                //lytPostman.log('lytPostmanCb.prototype.fn', e.origin, lytPostman.hosts.client)

                if (e.origin !== lytPostman.hosts.widget)
                    return;

                var msg = JSON.parse(e.data);
                if (msg.action !== action)
                    return;

                //lytPostman.log('Cb', msg)
                return cb(msg);
            }

            var proxy = new lytPostmanCb(cb, action);
            lytPostman.proxies.push(proxy);
            lytPostman.listen(action, proxy.fn);
        }, //public
        clearCallbacks: function () {
            //lytPostman.log(lytPostman.listeners)
            for (var key in lytPostman.listeners) {
                key = lytPostman.prefix(key);
                //lytPostman.log(key, lytPostman.listeners[key])
                if (key !== lytPostman.prefix('ready') && key !== lytPostman.prefix('resize')) {
                    //lytPostman.log(lytPostman.listeners[key])
                    window.removeEventListener('message', lytPostman.listeners[key]);
                }
            }
            lytPostman.listeners = {};
            lytPostman.cbQueue = {};                     
        },
        ready: function (msg) {
            //lytPostman.authorize();
            //lytPostman.dpauthorize();
            
            // lytPostman.dataStore.host = window.location.protocol + '://' + window.location.hostname + window.location.port;
            var widgetFrame = document.getElementById(lytPostman.prefix('widget-frame-') + msg.from);
            //lytPostman.log(lytPostman.dataStore)
            lytPostman.emit('init', lytPostman.dataStore);
            lytPostman.emit('ready', lytPostman.dataStore);
            //debugger;

            lytPostman.cbQueue[msg.from] = lytPostman.cbQueue[msg.from] || { isReady: false, messageQueue: [] };
            lytPostman.cbQueue[msg.from].isReady = true;
            //lytPostman.log('lytPostman.cbQueue', lytPostman.cbQueue);

            for (var key in lytPostman.cbQueue[msg.from].messageQueue) {
                //lytPostman.log('lytPostman.cbQueue[' + key + ']', lytPostman.cbQueue[msg.from].messageQueue[key]);
                var _msg = lytPostman.cbQueue[msg.from].messageQueue[key];
                lytPostman.send(_msg.action, _msg.data, _msg.frame);
            }

            // Empty Queue;
            lytPostman.cbQueue[msg.from].messageQueue = {};
        }, //private
        ignoreSend: [
            'init',
            'ready'
        ],
        send: function (action, data, frame) {
            //lytPostman.log('send', lytPostman.prefix(action), data, frame)
            frame = frame || document.getElementsByClassName(lytPostman.prefix('widget-frame'))[0];
            var widgetId = frame.id.replace(lytPostman.prefix('widget-frame-'), '');
            var _data = data || {};
            var msgObj = {
                action: lytPostman.prefix(action),
                data: _data
            };
            var client_host = window.location.protocol + '//' + window.location.hostname + (window.location.port != '' ? ':' + window.location.port : '');

            //lytPostman.log('cbQueue', lytPostman.cbQueue, lytPostman.ignoreSend.indexOf(action));

            if (!lytPostman.cbQueue[widgetId].isReady && lytPostman.ignoreSend.indexOf(action) < 0) {
                //lytPostman.cbQueue[widgetId] = lytPostman.cbQueue[widgetId] || { isReady: false, messageQueue: [] }
                lytPostman.cbQueue[widgetId].messageQueue.push({
                    action: action,
                    data: data,
                    frame: frame
                });
            } else {
                frame.contentWindow.postMessage(JSON.stringify(msgObj), lytPostman.hosts.widget);
            }
        },
        emit: function (action, data, cb) {
            // Get all iframes
            var frameElems = document.getElementsByClassName(lytPostman.prefix('widget-frame'));
            data.client_host = window.location.protocol + '//' + window.location.hostname + (window.location.port != '' ? ':' + window.location.port : '');
            // Convert to Array
            frameElems = Array.prototype.slice.call(frameElems);
            // frameElems.forEach(function (frame) {

            for (var key in frameElems) {
                if (frameElems[key].classList.contains(lytPostman.prefix('widget-frame')))
                    lytPostman.send(action, data, frameElems[key], cb)
            }
        },
        listen: function (name, fn) {
            name = lytPostman.prefix(name);
            window.addEventListener('message', fn);

            window.onunload = function () {
                window.removeEventListener('message', fn);
            }                                
            lytPostman.listeners[name] = fn;
        }, //private
        dpauthorize: function (code, cb) {
            return lytPostman
                .ajax
                .get('/widgets/api/auth/token')
                .set('Accept', 'application/json')
                .end(function (err, resp)
                {
                    lytPostman.emit('authorized',
                        {
                            expires_in: auth_response.expires_in,
                            access_token: auth_response.access_token,
                            user_id: lytPostman.dataStore.userid
                        });
                });
        },
        setData: function (parentElem, widgetElem) {
            //parentElem = parentElem || document.getElementsByTagName(lytPostman.prefix('widget'))[0];
            var widgets = document.getElementsByTagName(lytPostman.prefix('widget'));
            for (var index in widgets) {
                // get/set auth attributes
                //lytPostman.log('WIDGET_IMPL', widgets[index], widgets[index].getAttribute != undefined)

                if (widgets[index].getAttribute != undefined) {
                    for (var o in lytPostman.authAttributes) {
                        var attr = lytPostman.prefix(lytPostman.authAttributes[o]);
                        //lytPostman.log('WIDGET_ATTR', attr)
                        var val = widgets[index].getAttribute(attr);
                        if (widgetElem != undefined && widgetElem != null && widgetElem.nodeType == 1)
                            widgetElem.setAttribute(attr, val);
                        lytPostman.dataStore[lytPostman.convertAttribute(lytPostman.authAttributes[o])] = val;
                    }
                    // freeze as read only after set
                    lytPostman.deepFreeze(lytPostman.authStore);

                    // get/set other attributes
                    for (var key in widgets[index].attributes) {
                        if (lytPostman.authAttributes.indexOf(key) < 0 && key.indexOf(lytPostman.attributePrefix) > -1) {
                            var val = widgets[index].attributes[key];
                            if (widgetElem != undefined && widgetElem != null && widgetElem.nodeType == 1)
                                widgetElem.setAttribute(keyfn, val);
                            //lytPostman.log(key, widgets[index].attributes[key])
                            lytPostman.dataStore[lytPostman.convertAttribute(key)] = val;
                        }
                    }
                }
            }
        }, //private
        log: function (name) {
            if (_init.debug)
                console.log('[lytPostman]', ['[', name, ']'].join(''), arguments)
        }, //public
        init: function (tagNames) {
            if (!lytPostman.isArray(tagNames))
                tagNames = [tagNames];
            var _utils = {
                hasClass: function (el, className) {
                    if (el.classList)
                        return el.classList.contains(className)
                    else
                        return !!el.className.match(new RegExp('(\\s|^)' + className + '(\\s|$)'))
                },
                addClass: function (el, className) {
                    if (el.classList)
                        el.classList.add(className)
                    else if (!_util.hasClass(el, className))
                        el.className += " " + className
                },
                addStyle: function (css) {
                    var head = document.head || document.getElementsByTagName('head')[0],
                    style = document.createElement('style');

                    style.type = 'text/css';
                    if (style.styleSheet) {
                        style.styleSheet.cssText = css;
                    } else {
                        style.appendChild(document.createTextNode(css));
                    }

                    head.appendChild(style);
                }
            }
            var widgets = document.getElementsByTagName(lytPostman.prefix('widget'));
            _utils.addStyle("lyt-widget { background-color: transparent; } iframe.lyt-widget-frame{transition: .1s all linear;}");

            for (var k in _init.callbacks) {
                //lytPostman.log('_init.callbacks', k)
                var tagName = k;
                //var widgets = document.getElementsByTagName(lytPostman.prefix('widget'));
                var receivers = [];


                // Get all widgets
                for (var z in widgets) {
                    //lytPostman.log(widgets[z])
                    if (widgets[z].getAttribute !== undefined && widgets[z].getAttribute(lytPostman.prefix('type')) == tagName) {
                        receivers.push(widgets[z]);
                        var name = lytPostman.convertAttribute(tagName);
                        for (var cb in _init.callbacks[tagName]) {
                            var funcName = _init.callbacks[tagName][cb];
                            var converteredFuncName = lytPostman.convertAttribute(funcName);
                            // lytPostman.log(funcName, converteredFuncName);

                            lytPostman.receive(funcName, function (data) {
                                window[name][converteredFuncName](data.data, data.from);
                            })
                        }

                        for (var query in _init.mediaQueries[tagName]) {
                            var css = '@media all and (' + _init.mediaQueries[tagName][query].Key + ') {';
                            css += ' .' + lytPostman.prefix(tagName) + '-container{';

                            for (var prop in _init.mediaQueries[tagName][query].Value)
                                css += prop + ':' + _init.mediaQueries[tagName][query].Value[prop] + ';';

                            css += '}';
                            // lytPostman.log(css)

                            _utils.addStyle(css);
                        }
                    }
                }
               
                for (var i in receivers) {
                    var id = lytPostman.uuid();
                    //lytPostman.data.widgetId = id;
                    lytPostman.cbQueue[id] = { isReady: false, messageQueue: [] }

                    var tmpObj = document.createElement("iframe");
                    tmpObj.setAttribute('id', lytPostman.prefix('widget-frame-' + id));
                    tmpObj.setAttribute('style', 'transition: .1s all linear;border:0px !important;');

                    lytPostman.setData(receivers[i], tmpObj);
                    _utils.addClass(tmpObj, lytPostman.prefix('widget-frame'));
                    _utils.addClass(tmpObj, lytPostman.prefix(tagName + '-container'));
                    tmpObj.setAttribute('src', lytPostman.hosts.widget + '/widgets/dist/app/' + lytPostman.convertAttribute(tagName) + 'App/' + 'index' + '.html?widgetId=' + id + '&appId=' + '' + '&apiKey=' + '' + '&lang=' + lytPostman.authStore.lang + '&client=' + window.location.protocol + '//' + window.location.hostname + (window.location.port != '' ? ':' + window.location.port : ''))
                    tmpObj.innerHTML = 'Your browser does not support iframes.' 
                    receivers[i].innerHTML = tmpObj.outerHTML;
                }
            }
        }, //private
        reload: function (auth_response, promoCode = '') {
            // Clear cb queue
            lytPostman.clearCallbacks();
            lytPostman.init();
            if (auth_response != undefined)
                lytPostman.emit('authorized',
                    {
                        expires_in: auth_response.expires_in,
                        access_token: auth_response.access_token,
                        user_id: lytPostman.dataStore.userid,
                        promCode: promoCode
                    });
        }
    });

    if (!noGlobal) {
        window.lytPostman = lytPostman;
    }

    lytPostman.receive('ready', function (msg) {
        //lytPostman.log('ready', msg);
        lytPostman.ready(msg);
    });


    lytPostman.receive('resize', function (msg) {
        //lytPostman.log("resize", msg);
        document.getElementById(lytPostman.prefix('widget-frame-' + msg.from)).style.height = msg.data.height + "px";
    });

    (function () {                     
        lytPostman.setData();
        //if (false)
        //lytPostman.reload();
    })();

    //script.onreadystatechange = _onload;
    //script.onload = _onload;

    return lytPostman;
});

})();